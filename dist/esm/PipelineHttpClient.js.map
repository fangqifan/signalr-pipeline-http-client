{"version":3,"file":"PipelineHttpClient.js","sourceRoot":"","sources":["../../src/PipelineHttpClient.ts"],"names":[],"mappings":"AAAA,6DAA6D;AAC7D,+GAA+G;;;;;;;;;;;AAE/G,OAAO,EAAE,UAAU,EAAE,SAAS,EAAe,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAEnF;IAAwC,sCAAU;IAG9C,4BAAmB,OAAqE;QAAxF,YACI,iBAAO,SAEV;QADG,KAAI,CAAC,aAAa,GAAG,OAAO,CAAC;;IACjC,CAAC;IAED,kBAAkB;IACX,iCAAI,GAAX,UAAY,OAAoB;QAAhC,iBA4CC;QA3CG,wDAAwD;QACxD,IAAI,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,WAAW,CAAC,OAAO,EAAE;YACpD,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;SAC1D;QAED,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACjB,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;SAC1D;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE;YACd,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;SACvD;QAED,OAAO,IAAI,OAAO,CAAe,UAAC,OAAO,EAAE,MAAM;YAC7C,IAAM,UAAU,GAAQ,EAAE,CAAC;YAE3B,UAAU,CAAC,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;YAC7B,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;YACnC,UAAU,CAAC,QAAQ,GAAG,MAAM,CAAC;YAC7B,UAAU,CAAC,MAAM,GAAG;gBAChB,cAAc,EAAE,0BAA0B;aAC7C,CAAC;YACF,UAAU,CAAC,IAAI,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;YAExC,IAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;YAChC,IAAI,OAAO,EAAE;gBACT,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;qBACf,OAAO,CAAC,UAAC,MAAM;oBACZ,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC;aACV;YAED,IAAI,OAAO,CAAC,YAAY,EAAE;gBACtB,UAAU,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC;aAClD;YAED,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC;iBACzB,IAAI,CAAC,UAAC,MAAW;gBACd,OAAO,CAAC,IAAI,YAAY,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAC5F,CAAC,CAAC;iBACD,KAAK,CAAC;gBACH,MAAM,CAAC,IAAI,SAAS,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,CAAC;YAChD,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACP,CAAC;IACL,yBAAC;AAAD,CAAC,AAtDD,CAAwC,UAAU,GAsDjD","sourcesContent":["// Copyright (c) fangqifan@kirinsoft.cn. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient, HttpError, HttpRequest, HttpResponse } from \"@aspnet/signalr\";\r\n\r\nexport class PipelineHttpClient extends HttpClient {\r\n    private requestMethod: (requestObj: any) => Promise<{ statusCode: any, data: any }>;\r\n\r\n    public constructor(request: (requestObj: any) => Promise<{ statusCode: any, data: any }>) {\r\n        super();\r\n        this.requestMethod = request;\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new Error(\"request is aborted\"));\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const requestObj: any = {};\r\n\r\n            requestObj.url = request.url;\r\n            requestObj.method = request.method;\r\n            requestObj.dataType = \"text\";\r\n            requestObj.header = {\r\n                \"content-type\": \"text/plain;charset=UTF-8\",\r\n            };\r\n            requestObj.data = request.content || \"\";\r\n\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                        requestObj.header[header] = headers[header];\r\n                    });\r\n            }\r\n\r\n            if (request.responseType) {\r\n                requestObj.responseType = request.responseType;\r\n            }\r\n\r\n            this.requestMethod(requestObj)\r\n                .then((result: any) => {\r\n                    resolve(new HttpResponse(result.statusCode, result.statusCode.toString(), result.data));\r\n                })\r\n                .catch(() => {\r\n                    reject(new HttpError(\"request failed.\", 0));\r\n                });\r\n        });\r\n    }\r\n}\r\n"]}